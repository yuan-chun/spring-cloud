eureka:
  client:
    serviceUrl:
      defaultZone: http://register8888.com:8888/eureka/,http://register9999.com:9999/eureka/
    #    保证缓存数据的有效性，调用者会定时（默认值为30s）向注册中心更新实例，更新调用方本地缓存
    registry-fetch-interval-seconds: 1
  instance:
    #     下面两个配置是在提供方配置
    #    //服务实例会通过心跳（默认值为30s)续约的方式向Eureka Server定时更新自己的状态
    lease-renewal-interval-in-seconds: 1
    #    //租期到期时间（默认90秒）,如果发现实例在在一定时间（默认值为90s）内没有收到心跳，则会注销此实例，至少大于leaseRenewalIntervalInSeconds
    lease-expiration-duration-in-seconds: 3
    #    暴露 hostname
    instance-id: order8201
    #暴露ip
    prefer-ip-address: true
#实现feign接口方式开始服务降级 failBack 兜底的方案，
#服务熔断 break,当一定次数的请求，失败比例达到配置值时，就会熔断，就是不提供服务，直接failBack，此时就算正常的请求也会失败，等到一个窗口期后才会尝试恢复提供服务
#服务限流 flowLimit
feign:
  hystrix:
    enabled: true
#超时配置
hystrix:
  shareSecurityContext: true
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 8000

#ribbon 和 feign.hystrix.enabled: true 同时使用时无效 ；ribbon单独使用
#ribbon:
#  MaxAutoRetries: 1 #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试
#  MaxAutoRetriesNextServer: 1 #切换实例的重试次数
#  OkToRetryOnAllOperations: false # 对所有的操作请求都进行重试，如果是get则可以，如果是post,put等操作没有实现幂等的情况下是很危险的，所以设置为false
#  ConnectTimeout: 1000 #请求连接的超时时间
#  ReadTimeout: 5000 #请求处理的超时时间

server:
  port: 8220
spring:
  application:
    name: service-order-feign


logging:
  level:
    #监控的接口
    com.yuanchun.orderfeigen.api.service.IConsumeFeignService: debug